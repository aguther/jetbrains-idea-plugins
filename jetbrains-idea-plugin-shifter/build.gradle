// --------------------------------------------------------------------------------------------------------------------
plugins {
    id 'nebula.ospackage' version '4.3.0'
    id "de.undercouch.download" version '3.1.2'
}

// --------------------------------------------------------------------------------------------------------------------
task downloadPackages(type: de.undercouch.gradle.tasks.download.Download) {
    src "https://plugins.jetbrains.com/plugin/download?pr=idea_ce&updateId=${ideaPluginUpdateId}"
    dest project.file("$buildDir/downloaded/plugin.zip")
    onlyIfNewer true
    acceptAnyCertificate true
}

// --------------------------------------------------------------------------------------------------------------------
def extractionDirectory = project.file("$buildDir/extracted")

task extractPackages(dependsOn: downloadPackages) {

    outputs.dir extractionDirectory

    doLast {
        copy {
            from zipTree(downloadPackages.dest)
            into extractionDirectory
        }
    }
}

// --------------------------------------------------------------------------------------------------------------------
def targetDirectory = '/opt/jetbrains/idea'

ospackage {
    vendor = 'Kay Stenschke'
    url = 'https://github.com/kstenschke/shifter-plugin'
    license = 'http://www.apache.org/licenses/LICENSE-2.0.html'

    summary = 'Detects type of selection, line or keyword at caret and shifts it "up" or "down" on keyboard shortcut.'
    description = 'Detects type of selection, line or keyword at caret and shifts it "up" or "down" on keyboard shortcut. If there\'s only one shiftable word in a line, it can be shifted without the caret touching it. Lowercase/uppercase or lower case with upper first character of shifted words is maintained.'

    packageGroup = 'Development/Tools'

    packager = 'Andreas Guther'

    version = ideaPluginVersion
    release = rpmRelease
    arch = NOARCH
    os = LINUX

    user = 'root'

    requires('jetbrains-idea', ideaMinVersion, GREATER | EQUAL)
    requires('jetbrains-idea', ideaMaxVersion, LESS)

    into "$targetDirectory"

    from("$extractionDirectory") {
        exclude 'META-INF'
        into 'plugins/shifter/classes'
    }
    from("$extractionDirectory") {
        include 'META-INF/*'
        into 'plugins/shifter'
    }
}

buildRpm {
    dependsOn extractPackages
}

// --------------------------------------------------------------------------------------------------------------------
defaultTasks 'clean', 'buildRpm'